<?php

use think\facade\Route;
use Native\ThinkPHP\Http\Controllers\NativeController;

// NativePHP API 路由
Route::group('_native', function () {
    // 应用信息
    Route::get('info', 'Native\ThinkPHP\Http\Controllers\NativeController@info');

    // 通知
    Route::post('notification', 'Native\ThinkPHP\Http\Controllers\NativeController@sendNotification');

    // 窗口管理
    Route::post('window/open', 'Native\ThinkPHP\Http\Controllers\NativeController@openWindow');
    Route::post('window/close', 'Native\ThinkPHP\Http\Controllers\NativeController@closeWindow');

    // 应用控制
    Route::post('app/restart', 'Native\ThinkPHP\Http\Controllers\NativeController@restart');
    Route::post('app/quit', 'Native\ThinkPHP\Http\Controllers\NativeController@quit');

    // 键盘控制
    Route::post('keyboard/register', 'Native\ThinkPHP\Http\Controllers\KeyboardController@register');
    Route::post('keyboard/unregister', 'Native\ThinkPHP\Http\Controllers\KeyboardController@unregister');
    Route::post('keyboard/unregister-all', 'Native\ThinkPHP\Http\Controllers\KeyboardController@unregisterAll');
    Route::post('keyboard/register-global', 'Native\ThinkPHP\Http\Controllers\KeyboardController@registerGlobal');
    Route::post('keyboard/unregister-global', 'Native\ThinkPHP\Http\Controllers\KeyboardController@unregisterGlobal');
    Route::post('keyboard/unregister-all-global', 'Native\ThinkPHP\Http\Controllers\KeyboardController@unregisterAllGlobal');
    Route::post('keyboard/send-key', 'Native\ThinkPHP\Http\Controllers\KeyboardController@sendKey');
    Route::post('keyboard/send-text', 'Native\ThinkPHP\Http\Controllers\KeyboardController@sendText');
    Route::post('keyboard/tap-key', 'Native\ThinkPHP\Http\Controllers\KeyboardController@tapKey');
    Route::post('keyboard/key-down', 'Native\ThinkPHP\Http\Controllers\KeyboardController@keyDown');
    Route::post('keyboard/key-up', 'Native\ThinkPHP\Http\Controllers\KeyboardController@keyUp');
    Route::post('keyboard/on', 'Native\ThinkPHP\Http\Controllers\KeyboardController@on');
    Route::post('keyboard/off', 'Native\ThinkPHP\Http\Controllers\KeyboardController@off');
    Route::get('keyboard/layout', 'Native\ThinkPHP\Http\Controllers\KeyboardController@getLayout');
    Route::post('keyboard/layout', 'Native\ThinkPHP\Http\Controllers\KeyboardController@setLayout');

    // 电源监控
    Route::get('power-monitor/idle-time', 'Native\ThinkPHP\Http\Controllers\PowerMonitorController@getIdleTime');
    Route::get('power-monitor/is-locked', 'Native\ThinkPHP\Http\Controllers\PowerMonitorController@isLocked');
    Route::get('power-monitor/is-on-screen-saver', 'Native\ThinkPHP\Http\Controllers\PowerMonitorController@isOnScreenSaver');
    Route::get('power-monitor/power-state', 'Native\ThinkPHP\Http\Controllers\PowerMonitorController@getPowerState');
    Route::get('power-monitor/battery-level', 'Native\ThinkPHP\Http\Controllers\PowerMonitorController@getBatteryLevel');
    Route::get('power-monitor/is-battery-charging', 'Native\ThinkPHP\Http\Controllers\PowerMonitorController@isBatteryCharging');
    Route::get('power-monitor/battery-time-remaining', 'Native\ThinkPHP\Http\Controllers\PowerMonitorController@getBatteryTimeRemaining');
    Route::post('power-monitor/on', 'Native\ThinkPHP\Http\Controllers\PowerMonitorController@on');
    Route::post('power-monitor/off', 'Native\ThinkPHP\Http\Controllers\PowerMonitorController@off');
    Route::post('power-monitor/off-all', 'Native\ThinkPHP\Http\Controllers\PowerMonitorController@offAll');

    // Dock 控制 (macOS 专用)
    Route::post('dock/set-icon', 'Native\ThinkPHP\Http\Controllers\DockController@setIcon');
    Route::post('dock/set-badge', 'Native\ThinkPHP\Http\Controllers\DockController@setBadge');
    Route::post('dock/set-badge-count', 'Native\ThinkPHP\Http\Controllers\DockController@setBadgeCount');
    Route::get('dock/get-badge-count', 'Native\ThinkPHP\Http\Controllers\DockController@getBadgeCount');
    Route::post('dock/clear-badge', 'Native\ThinkPHP\Http\Controllers\DockController@clearBadge');
    Route::post('dock/set-menu', 'Native\ThinkPHP\Http\Controllers\DockController@setMenu');
    Route::post('dock/show', 'Native\ThinkPHP\Http\Controllers\DockController@show');
    Route::post('dock/hide', 'Native\ThinkPHP\Http\Controllers\DockController@hide');
    Route::get('dock/is-visible', 'Native\ThinkPHP\Http\Controllers\DockController@isVisible');
    Route::post('dock/bounce', 'Native\ThinkPHP\Http\Controllers\DockController@bounce');
    Route::post('dock/cancel-bounce', 'Native\ThinkPHP\Http\Controllers\DockController@cancelBounce');
    Route::post('dock/set-download-progress', 'Native\ThinkPHP\Http\Controllers\DockController@setDownloadProgress');
    Route::post('dock/clear-download-progress', 'Native\ThinkPHP\Http\Controllers\DockController@clearDownloadProgress');
    Route::post('dock/set-tooltip', 'Native\ThinkPHP\Http\Controllers\DockController@setToolTip');
    Route::post('dock/on-menu-click', 'Native\ThinkPHP\Http\Controllers\DockController@onMenuClick');
    Route::post('dock/off-menu-click', 'Native\ThinkPHP\Http\Controllers\DockController@offMenuClick');
    Route::post('dock/on-click', 'Native\ThinkPHP\Http\Controllers\DockController@onClick');
    Route::post('dock/off-click', 'Native\ThinkPHP\Http\Controllers\DockController@offClick');
    Route::post('dock/set-flash', 'Native\ThinkPHP\Http\Controllers\DockController@setFlash');
    Route::post('dock/create-menu', 'Native\ThinkPHP\Http\Controllers\DockController@createMenu');
    Route::get('dock/get-icon-size', 'Native\ThinkPHP\Http\Controllers\DockController@getIconSize');

    // 推送通知
    Route::post('push-notification/send', 'Native\ThinkPHP\Http\Controllers\PushNotificationController@send');
    Route::get('push-notification/status', 'Native\ThinkPHP\Http\Controllers\PushNotificationController@getStatus');
    Route::post('push-notification/cancel', 'Native\ThinkPHP\Http\Controllers\PushNotificationController@cancel');
    Route::post('push-notification/register-device', 'Native\ThinkPHP\Http\Controllers\PushNotificationController@registerDevice');
    Route::post('push-notification/unregister-device', 'Native\ThinkPHP\Http\Controllers\PushNotificationController@unregisterDevice');
    Route::get('push-notification/device', 'Native\ThinkPHP\Http\Controllers\PushNotificationController@getDeviceInfo');
    Route::get('push-notification/history', 'Native\ThinkPHP\Http\Controllers\PushNotificationController@getHistory');
    Route::get('push-notification/statistics', 'Native\ThinkPHP\Http\Controllers\PushNotificationController@getStatistics');
    Route::post('push-notification/set-provider', 'Native\ThinkPHP\Http\Controllers\PushNotificationController@setProvider');
    Route::get('push-notification/get-provider', 'Native\ThinkPHP\Http\Controllers\PushNotificationController@getProvider');
    Route::post('push-notification/set-config', 'Native\ThinkPHP\Http\Controllers\PushNotificationController@setConfig');
    Route::get('push-notification/get-config', 'Native\ThinkPHP\Http\Controllers\PushNotificationController@getConfig');

    // 数据库
    Route::post('database/query', 'Native\ThinkPHP\Http\Controllers\DatabaseController@query');
    Route::post('database/exec', 'Native\ThinkPHP\Http\Controllers\DatabaseController@exec');
    Route::get('database/last-insert-id', 'Native\ThinkPHP\Http\Controllers\DatabaseController@lastInsertId');
    Route::post('database/tables', 'Native\ThinkPHP\Http\Controllers\DatabaseController@tables');
    Route::post('database/table-structure', 'Native\ThinkPHP\Http\Controllers\DatabaseController@tableStructure');
    Route::post('database/create-table', 'Native\ThinkPHP\Http\Controllers\DatabaseController@createTable');
    Route::post('database/drop-table', 'Native\ThinkPHP\Http\Controllers\DatabaseController@dropTable');
    Route::post('database/backup', 'Native\ThinkPHP\Http\Controllers\DatabaseController@backup');
    Route::post('database/restore', 'Native\ThinkPHP\Http\Controllers\DatabaseController@restore');

    // 自动更新
    Route::post('auto-updater/set-feed-url', 'Native\ThinkPHP\Http\Controllers\AutoUpdaterController@setFeedURL');
    Route::post('auto-updater/set-auto-download', 'Native\ThinkPHP\Http\Controllers\AutoUpdaterController@setAutoDownload');
    Route::post('auto-updater/set-auto-install', 'Native\ThinkPHP\Http\Controllers\AutoUpdaterController@setAutoInstall');
    Route::post('auto-updater/set-allow-prerelease', 'Native\ThinkPHP\Http\Controllers\AutoUpdaterController@setAllowPrerelease');
    Route::post('auto-updater/check-for-updates', 'Native\ThinkPHP\Http\Controllers\AutoUpdaterController@checkForUpdates');
    Route::post('auto-updater/download-update', 'Native\ThinkPHP\Http\Controllers\AutoUpdaterController@downloadUpdate');
    Route::post('auto-updater/install-update', 'Native\ThinkPHP\Http\Controllers\AutoUpdaterController@installUpdate');
    Route::get('auto-updater/current-version', 'Native\ThinkPHP\Http\Controllers\AutoUpdaterController@getCurrentVersion');
    Route::get('auto-updater/latest-version', 'Native\ThinkPHP\Http\Controllers\AutoUpdaterController@getLatestVersion');
    Route::get('auto-updater/update-info', 'Native\ThinkPHP\Http\Controllers\AutoUpdaterController@getUpdateInfo');
    Route::post('auto-updater/on-checking-for-update', 'Native\ThinkPHP\Http\Controllers\AutoUpdaterController@onCheckingForUpdate');
    Route::post('auto-updater/on-update-available', 'Native\ThinkPHP\Http\Controllers\AutoUpdaterController@onUpdateAvailable');
    Route::post('auto-updater/on-update-not-available', 'Native\ThinkPHP\Http\Controllers\AutoUpdaterController@onUpdateNotAvailable');
    Route::post('auto-updater/on-download-progress', 'Native\ThinkPHP\Http\Controllers\AutoUpdaterController@onDownloadProgress');
    Route::post('auto-updater/on-update-downloaded', 'Native\ThinkPHP\Http\Controllers\AutoUpdaterController@onUpdateDownloaded');
    Route::post('auto-updater/on-error', 'Native\ThinkPHP\Http\Controllers\AutoUpdaterController@onError');
    Route::post('auto-updater/cancel-download', 'Native\ThinkPHP\Http\Controllers\AutoUpdaterController@cancelDownload');
    Route::post('auto-updater/quit-and-install', 'Native\ThinkPHP\Http\Controllers\AutoUpdaterController@quitAndInstall');

    // 桌面快捷方式
    Route::post('shortcut/create-desktop', 'Native\ThinkPHP\Http\Controllers\ShortcutController@createDesktop');
    Route::post('shortcut/create-start-menu', 'Native\ThinkPHP\Http\Controllers\ShortcutController@createStartMenu');
    Route::post('shortcut/create', 'Native\ThinkPHP\Http\Controllers\ShortcutController@create');
    Route::get('shortcut/exists-on-desktop', 'Native\ThinkPHP\Http\Controllers\ShortcutController@existsOnDesktop');
    Route::get('shortcut/exists-in-start-menu', 'Native\ThinkPHP\Http\Controllers\ShortcutController@existsInStartMenu');
    Route::get('shortcut/exists', 'Native\ThinkPHP\Http\Controllers\ShortcutController@exists');
    Route::post('shortcut/remove-from-desktop', 'Native\ThinkPHP\Http\Controllers\ShortcutController@removeFromDesktop');
    Route::post('shortcut/remove-from-start-menu', 'Native\ThinkPHP\Http\Controllers\ShortcutController@removeFromStartMenu');
    Route::post('shortcut/remove', 'Native\ThinkPHP\Http\Controllers\ShortcutController@remove');
    Route::post('shortcut/set-login-item-settings', 'Native\ThinkPHP\Http\Controllers\ShortcutController@setLoginItemSettings');
    Route::get('shortcut/get-login-item-settings', 'Native\ThinkPHP\Http\Controllers\ShortcutController@getLoginItemSettings');
    Route::get('shortcut/get-desktop-path', 'Native\ThinkPHP\Http\Controllers\ShortcutController@getDesktopPath');
    Route::get('shortcut/get-start-menu-path', 'Native\ThinkPHP\Http\Controllers\ShortcutController@getStartMenuPath');
    Route::get('shortcut/get-application-path', 'Native\ThinkPHP\Http\Controllers\ShortcutController@getApplicationPath');
    Route::get('shortcut/get-application-name', 'Native\ThinkPHP\Http\Controllers\ShortcutController@getApplicationName');

    // 地理位置服务
    Route::post('geolocation/get-current-position', 'Native\ThinkPHP\Http\Controllers\GeolocationController@getCurrentPosition');
    Route::post('geolocation/watch-position', 'Native\ThinkPHP\Http\Controllers\GeolocationController@watchPosition');
    Route::post('geolocation/clear-watch', 'Native\ThinkPHP\Http\Controllers\GeolocationController@clearWatch');
    Route::get('geolocation/is-watching', 'Native\ThinkPHP\Http\Controllers\GeolocationController@isWatching');
    Route::get('geolocation/get-watch-id', 'Native\ThinkPHP\Http\Controllers\GeolocationController@getWatchId');
    Route::post('geolocation/calculate-distance', 'Native\ThinkPHP\Http\Controllers\GeolocationController@calculateDistance');
    Route::post('geolocation/get-address-from-coordinates', 'Native\ThinkPHP\Http\Controllers\GeolocationController@getAddressFromCoordinates');
    Route::post('geolocation/get-coordinates-from-address', 'Native\ThinkPHP\Http\Controllers\GeolocationController@getCoordinatesFromAddress');
    Route::get('geolocation/is-available', 'Native\ThinkPHP\Http\Controllers\GeolocationController@isAvailable');
    Route::get('geolocation/check-permission', 'Native\ThinkPHP\Http\Controllers\GeolocationController@checkPermission');
    Route::post('geolocation/request-permission', 'Native\ThinkPHP\Http\Controllers\GeolocationController@requestPermission');

    // 设备管理
    Route::get('device/bluetooth-devices', 'Native\ThinkPHP\Http\Controllers\DeviceController@getBluetoothDevices');
    Route::get('device/usb-devices', 'Native\ThinkPHP\Http\Controllers\DeviceController@getUsbDevices');
    Route::post('device/scan-bluetooth-devices', 'Native\ThinkPHP\Http\Controllers\DeviceController@scanBluetoothDevices');
    Route::post('device/connect-bluetooth-device', 'Native\ThinkPHP\Http\Controllers\DeviceController@connectBluetoothDevice');
    Route::post('device/disconnect-bluetooth-device', 'Native\ThinkPHP\Http\Controllers\DeviceController@disconnectBluetoothDevice');
    Route::post('device/pair-bluetooth-device', 'Native\ThinkPHP\Http\Controllers\DeviceController@pairBluetoothDevice');
    Route::post('device/unpair-bluetooth-device', 'Native\ThinkPHP\Http\Controllers\DeviceController@unpairBluetoothDevice');
    Route::post('device/send-data-to-bluetooth-device', 'Native\ThinkPHP\Http\Controllers\DeviceController@sendDataToBluetoothDevice');
    Route::post('device/receive-data-from-bluetooth-device', 'Native\ThinkPHP\Http\Controllers\DeviceController@receiveDataFromBluetoothDevice');
    Route::post('device/open-usb-device', 'Native\ThinkPHP\Http\Controllers\DeviceController@openUsbDevice');
    Route::post('device/close-usb-device', 'Native\ThinkPHP\Http\Controllers\DeviceController@closeUsbDevice');
    Route::post('device/send-data-to-usb-device', 'Native\ThinkPHP\Http\Controllers\DeviceController@sendDataToUsbDevice');
    Route::post('device/receive-data-from-usb-device', 'Native\ThinkPHP\Http\Controllers\DeviceController@receiveDataFromUsbDevice');
    Route::get('device/device-info', 'Native\ThinkPHP\Http\Controllers\DeviceController@getDeviceInfo');

    // 语音识别和合成
    Route::post('speech/start-recognition', 'Native\ThinkPHP\Http\Controllers\SpeechController@startRecognition');
    Route::post('speech/stop-recognition', 'Native\ThinkPHP\Http\Controllers\SpeechController@stopRecognition');
    Route::get('speech/is-recognizing', 'Native\ThinkPHP\Http\Controllers\SpeechController@isRecognizing');
    Route::get('speech/get-recognition-result', 'Native\ThinkPHP\Http\Controllers\SpeechController@getRecognitionResult');
    Route::post('speech/speak', 'Native\ThinkPHP\Http\Controllers\SpeechController@speak');
    Route::post('speech/pause', 'Native\ThinkPHP\Http\Controllers\SpeechController@pause');
    Route::post('speech/resume', 'Native\ThinkPHP\Http\Controllers\SpeechController@resume');
    Route::post('speech/cancel', 'Native\ThinkPHP\Http\Controllers\SpeechController@cancel');
    Route::get('speech/is-speaking', 'Native\ThinkPHP\Http\Controllers\SpeechController@isSpeaking');
    Route::get('speech/get-voices', 'Native\ThinkPHP\Http\Controllers\SpeechController@getVoices');
    Route::post('speech/text-to-audio', 'Native\ThinkPHP\Http\Controllers\SpeechController@textToAudio');
    Route::post('speech/audio-to-text', 'Native\ThinkPHP\Http\Controllers\SpeechController@audioToText');

    // 打印功能
    Route::get('printer/get-printers', 'Native\ThinkPHP\Http\Controllers\PrinterController@getPrinters');
    Route::get('printer/get-default-printer', 'Native\ThinkPHP\Http\Controllers\PrinterController@getDefaultPrinter');
    Route::post('printer/print-html', 'Native\ThinkPHP\Http\Controllers\PrinterController@printHtml');
    Route::post('printer/print-file', 'Native\ThinkPHP\Http\Controllers\PrinterController@printFile');
    Route::post('printer/print-to-pdf', 'Native\ThinkPHP\Http\Controllers\PrinterController@printToPdf');
    Route::post('printer/show-print-preview', 'Native\ThinkPHP\Http\Controllers\PrinterController@showPrintPreview');

    // 进程管理
    Route::post('process/run', 'Native\ThinkPHP\Http\Controllers\ProcessController@run');
    Route::post('process/run-php', 'Native\ThinkPHP\Http\Controllers\ProcessController@runPhp');
    Route::post('process/run-think', 'Native\ThinkPHP\Http\Controllers\ProcessController@runThink');
    Route::get('process/get', 'Native\ThinkPHP\Http\Controllers\ProcessController@get');
    Route::get('process/all', 'Native\ThinkPHP\Http\Controllers\ProcessController@all');
    Route::get('process/get-output', 'Native\ThinkPHP\Http\Controllers\ProcessController@getOutput');
    Route::get('process/get-error', 'Native\ThinkPHP\Http\Controllers\ProcessController@getError');
    Route::get('process/get-exit-code', 'Native\ThinkPHP\Http\Controllers\ProcessController@getExitCode');
    Route::get('process/is-running', 'Native\ThinkPHP\Http\Controllers\ProcessController@isRunning');
    Route::post('process/write', 'Native\ThinkPHP\Http\Controllers\ProcessController@write');
    Route::post('process/signal', 'Native\ThinkPHP\Http\Controllers\ProcessController@signal');
    Route::post('process/kill', 'Native\ThinkPHP\Http\Controllers\ProcessController@kill');
    Route::post('process/wait', 'Native\ThinkPHP\Http\Controllers\ProcessController@wait');
    Route::post('process/on', 'Native\ThinkPHP\Http\Controllers\ProcessController@on');
    Route::post('process/cleanup', 'Native\ThinkPHP\Http\Controllers\ProcessController@cleanup');
    Route::get('process/get-info', 'Native\ThinkPHP\Http\Controllers\ProcessController@getInfo');
    Route::get('process/get-processes', 'Native\ThinkPHP\Http\Controllers\ProcessController@getProcesses');

    // 系统信息
    Route::get('system/os', 'Native\ThinkPHP\Http\Controllers\SystemController@getOS');
    Route::get('system/os-version', 'Native\ThinkPHP\Http\Controllers\SystemController@getOSVersion');
    Route::get('system/arch', 'Native\ThinkPHP\Http\Controllers\SystemController@getArch');
    Route::get('system/hostname', 'Native\ThinkPHP\Http\Controllers\SystemController@getHostname');
    Route::get('system/home-path', 'Native\ThinkPHP\Http\Controllers\SystemController@getHomePath');
    Route::get('system/temp-path', 'Native\ThinkPHP\Http\Controllers\SystemController@getTempPath');
    Route::get('system/app-data-path', 'Native\ThinkPHP\Http\Controllers\SystemController@getAppDataPath');
    Route::get('system/memory-info', 'Native\ThinkPHP\Http\Controllers\SystemController@getMemoryInfo');
    Route::get('system/cpu-info', 'Native\ThinkPHP\Http\Controllers\SystemController@getCPUInfo');
    Route::get('system/network-interfaces', 'Native\ThinkPHP\Http\Controllers\SystemController@getNetworkInterfaces');
    Route::get('system/displays', 'Native\ThinkPHP\Http\Controllers\SystemController@getDisplays');
    Route::get('system/battery-info', 'Native\ThinkPHP\Http\Controllers\SystemController@getBatteryInfo');
    Route::get('system/language', 'Native\ThinkPHP\Http\Controllers\SystemController@getLanguage');
    Route::post('system/open-external', 'Native\ThinkPHP\Http\Controllers\SystemController@openExternal');
    Route::post('system/open-path', 'Native\ThinkPHP\Http\Controllers\SystemController@openPath');
    Route::post('system/show-item-in-folder', 'Native\ThinkPHP\Http\Controllers\SystemController@showItemInFolder');
    Route::post('system/move-item-to-trash', 'Native\ThinkPHP\Http\Controllers\SystemController@moveItemToTrash');
    Route::post('system/beep', 'Native\ThinkPHP\Http\Controllers\SystemController@beep');
    Route::post('system/sleep', 'Native\ThinkPHP\Http\Controllers\SystemController@sleep');
    Route::post('system/lock', 'Native\ThinkPHP\Http\Controllers\SystemController@lock');
    Route::post('system/logout', 'Native\ThinkPHP\Http\Controllers\SystemController@logout');
    Route::post('system/restart', 'Native\ThinkPHP\Http\Controllers\SystemController@restart');
    Route::post('system/shutdown', 'Native\ThinkPHP\Http\Controllers\SystemController@shutdown');

    // 屏幕相关
    Route::get('screen/all-displays', 'Native\ThinkPHP\Http\Controllers\ScreenController@getAllDisplays');
    Route::get('screen/primary-display', 'Native\ThinkPHP\Http\Controllers\ScreenController@getPrimaryDisplay');
    Route::get('screen/cursor-position', 'Native\ThinkPHP\Http\Controllers\ScreenController@getCursorPosition');
    Route::post('screen/capture-screenshot', 'Native\ThinkPHP\Http\Controllers\ScreenController@captureScreenshot');
    Route::post('screen/capture-window', 'Native\ThinkPHP\Http\Controllers\ScreenController@captureWindow');
    Route::post('screen/start-recording', 'Native\ThinkPHP\Http\Controllers\ScreenController@startRecording');
    Route::post('screen/stop-recording', 'Native\ThinkPHP\Http\Controllers\ScreenController@stopRecording');
    Route::post('screen/pause-recording', 'Native\ThinkPHP\Http\Controllers\ScreenController@pauseRecording');
    Route::post('screen/resume-recording', 'Native\ThinkPHP\Http\Controllers\ScreenController@resumeRecording');
    Route::get('screen/is-recording', 'Native\ThinkPHP\Http\Controllers\ScreenController@isRecording');
    Route::get('screen/current-display', 'Native\ThinkPHP\Http\Controllers\ScreenController@getCurrentDisplay');
    Route::post('screen/display-size', 'Native\ThinkPHP\Http\Controllers\ScreenController@getDisplaySize');
    Route::post('screen/display-work-area-size', 'Native\ThinkPHP\Http\Controllers\ScreenController@getDisplayWorkAreaSize');
    Route::post('screen/display-scale-factor', 'Native\ThinkPHP\Http\Controllers\ScreenController@getDisplayScaleFactor');
    Route::post('screen/brightness', 'Native\ThinkPHP\Http\Controllers\ScreenController@getBrightness');
    Route::post('screen/set-brightness', 'Native\ThinkPHP\Http\Controllers\ScreenController@setBrightness');
    Route::post('screen/orientation', 'Native\ThinkPHP\Http\Controllers\ScreenController@getOrientation');
    Route::post('screen/set-orientation', 'Native\ThinkPHP\Http\Controllers\ScreenController@setOrientation');
    Route::post('screen/resolution', 'Native\ThinkPHP\Http\Controllers\ScreenController@getResolution');
    Route::post('screen/set-resolution', 'Native\ThinkPHP\Http\Controllers\ScreenController@setResolution');

    // 事件广播
    Route::post('broadcasting/broadcast', 'Native\ThinkPHP\Http\Controllers\BroadcastingController@broadcast');
    Route::post('broadcasting/listen', 'Native\ThinkPHP\Http\Controllers\BroadcastingController@listen');
    Route::post('broadcasting/unlisten', 'Native\ThinkPHP\Http\Controllers\BroadcastingController@unlisten');
    Route::get('broadcasting/channels', 'Native\ThinkPHP\Http\Controllers\BroadcastingController@getChannels');
    Route::get('broadcasting/events', 'Native\ThinkPHP\Http\Controllers\BroadcastingController@getEvents');
    Route::post('broadcasting/create-channel', 'Native\ThinkPHP\Http\Controllers\BroadcastingController@createChannel');
    Route::post('broadcasting/delete-channel', 'Native\ThinkPHP\Http\Controllers\BroadcastingController@deleteChannel');
    Route::post('broadcasting/clear-channel', 'Native\ThinkPHP\Http\Controllers\BroadcastingController@clearChannel');
    Route::get('broadcasting/channel-exists', 'Native\ThinkPHP\Http\Controllers\BroadcastingController@channelExists');
    Route::get('broadcasting/listener-count', 'Native\ThinkPHP\Http\Controllers\BroadcastingController@getListenerCount');

    // 语言切换
    Route::post('language/switch', 'Native\ThinkPHP\Http\Controllers\LanguageController@switch');
    Route::get('language/current', 'Native\ThinkPHP\Http\Controllers\LanguageController@current');
    Route::get('language/available', 'Native\ThinkPHP\Http\Controllers\LanguageController@available');
    Route::post('language/add', 'Native\ThinkPHP\Http\Controllers\LanguageController@add');
    Route::post('language/remove', 'Native\ThinkPHP\Http\Controllers\LanguageController@remove');
    Route::get('language/render', 'Native\ThinkPHP\Http\Controllers\LanguageController@render');

    // 主题切换
    Route::post('theme/switch', 'Native\ThinkPHP\Http\Controllers\ThemeController@switch');
    Route::get('theme/current', 'Native\ThinkPHP\Http\Controllers\ThemeController@current');
    Route::get('theme/available', 'Native\ThinkPHP\Http\Controllers\ThemeController@available');
    Route::post('theme/add', 'Native\ThinkPHP\Http\Controllers\ThemeController@add');
    Route::post('theme/remove', 'Native\ThinkPHP\Http\Controllers\ThemeController@remove');
    Route::get('theme/options', 'Native\ThinkPHP\Http\Controllers\ThemeController@options');
    Route::post('theme/save-options', 'Native\ThinkPHP\Http\Controllers\ThemeController@saveOptions');
    Route::post('theme/apply', 'Native\ThinkPHP\Http\Controllers\ThemeController@apply');
    Route::get('theme/detect-system', 'Native\ThinkPHP\Http\Controllers\ThemeController@detectSystem');
    Route::post('theme/system-changed', 'Native\ThinkPHP\Http\Controllers\ThemeController@systemChanged');
    Route::get('theme/render', 'Native\ThinkPHP\Http\Controllers\ThemeController@render');

    // 子进程管理
    Route::post('child-process/start', 'Native\ThinkPHP\Http\Controllers\ChildProcessController@start');
    Route::get('child-process/get', 'Native\ThinkPHP\Http\Controllers\ChildProcessController@get');
    Route::get('child-process/all', 'Native\ThinkPHP\Http\Controllers\ChildProcessController@all');
    Route::post('child-process/stop', 'Native\ThinkPHP\Http\Controllers\ChildProcessController@stop');
    Route::post('child-process/restart', 'Native\ThinkPHP\Http\Controllers\ChildProcessController@restart');
    Route::post('child-process/message', 'Native\ThinkPHP\Http\Controllers\ChildProcessController@message');
    Route::get('child-process/exists', 'Native\ThinkPHP\Http\Controllers\ChildProcessController@exists');
    Route::get('child-process/is-running', 'Native\ThinkPHP\Http\Controllers\ChildProcessController@isRunning');
    Route::get('child-process/get-pid', 'Native\ThinkPHP\Http\Controllers\ChildProcessController@getPid');
    Route::get('child-process/get-status', 'Native\ThinkPHP\Http\Controllers\ChildProcessController@getStatus');
    Route::get('child-process/get-output', 'Native\ThinkPHP\Http\Controllers\ChildProcessController@getOutput');
    Route::get('child-process/get-error', 'Native\ThinkPHP\Http\Controllers\ChildProcessController@getError');
    Route::get('child-process/get-exit-code', 'Native\ThinkPHP\Http\Controllers\ChildProcessController@getExitCode');
    Route::post('child-process/cleanup', 'Native\ThinkPHP\Http\Controllers\ChildProcessController@cleanup');

    // 队列工作进程管理
    Route::post('queue-worker/up', 'Native\ThinkPHP\Http\Controllers\QueueWorkerController@up');
    Route::post('queue-worker/down', 'Native\ThinkPHP\Http\Controllers\QueueWorkerController@down');
    Route::post('queue-worker/restart', 'Native\ThinkPHP\Http\Controllers\QueueWorkerController@restart');
    Route::get('queue-worker/status', 'Native\ThinkPHP\Http\Controllers\QueueWorkerController@status');
    Route::get('queue-worker/all', 'Native\ThinkPHP\Http\Controllers\QueueWorkerController@all');
    Route::get('queue-worker/get', 'Native\ThinkPHP\Http\Controllers\QueueWorkerController@get');
    Route::post('queue-worker/cleanup', 'Native\ThinkPHP\Http\Controllers\QueueWorkerController@cleanup');
    Route::post('queue-worker/down-all', 'Native\ThinkPHP\Http\Controllers\QueueWorkerController@downAll');
    Route::post('queue-worker/restart-all', 'Native\ThinkPHP\Http\Controllers\QueueWorkerController@restartAll');
    Route::get('queue-worker/exists', 'Native\ThinkPHP\Http\Controllers\QueueWorkerController@exists');
    Route::get('queue-worker/is-running', 'Native\ThinkPHP\Http\Controllers\QueueWorkerController@isRunning');
    Route::get('queue-worker/get-pid', 'Native\ThinkPHP\Http\Controllers\QueueWorkerController@getPid');
    Route::get('queue-worker/get-output', 'Native\ThinkPHP\Http\Controllers\QueueWorkerController@getOutput');
    Route::get('queue-worker/get-error', 'Native\ThinkPHP\Http\Controllers\QueueWorkerController@getError');
    Route::get('queue-worker/get-exit-code', 'Native\ThinkPHP\Http\Controllers\QueueWorkerController@getExitCode');

    // 剪贴板相关
    Route::get('clipboard/text', 'Native\ThinkPHP\Http\Controllers\ClipboardController@getText');
    Route::post('clipboard/text', 'Native\ThinkPHP\Http\Controllers\ClipboardController@setText');
    Route::get('clipboard/image', 'Native\ThinkPHP\Http\Controllers\ClipboardController@getImage');
    Route::post('clipboard/image', 'Native\ThinkPHP\Http\Controllers\ClipboardController@setImage');
    Route::post('clipboard/clear', 'Native\ThinkPHP\Http\Controllers\ClipboardController@clear');
    Route::get('clipboard/html', 'Native\ThinkPHP\Http\Controllers\ClipboardController@getHtml');
    Route::post('clipboard/html', 'Native\ThinkPHP\Http\Controllers\ClipboardController@setHtml');
    Route::post('clipboard/has', 'Native\ThinkPHP\Http\Controllers\ClipboardController@has');
    Route::get('clipboard/formats', 'Native\ThinkPHP\Http\Controllers\ClipboardController@getFormats');
    Route::get('clipboard/rtf', 'Native\ThinkPHP\Http\Controllers\ClipboardController@getRtf');
    Route::post('clipboard/rtf', 'Native\ThinkPHP\Http\Controllers\ClipboardController@setRtf');
    Route::get('clipboard/files', 'Native\ThinkPHP\Http\Controllers\ClipboardController@getFiles');
    Route::post('clipboard/files', 'Native\ThinkPHP\Http\Controllers\ClipboardController@setFiles');
    Route::post('clipboard/read-format', 'Native\ThinkPHP\Http\Controllers\ClipboardController@readFormat');
    Route::post('clipboard/write-format', 'Native\ThinkPHP\Http\Controllers\ClipboardController@writeFormat');
    Route::post('clipboard/on-change', 'Native\ThinkPHP\Http\Controllers\ClipboardController@onChange');
    Route::post('clipboard/off-change', 'Native\ThinkPHP\Http\Controllers\ClipboardController@offChange');
})->allowCrossDomain();
